In Thymeleaf, fragments are reusable pieces of HTML that you can define once and include in multiple places throughout your templates. This helps you avoid repetition and makes your templates easier to maintain.

### Defining a Fragment

You define a fragment in a Thymeleaf template using the `th:fragment` attribute. Here’s a simple example:

**header.html**:
```html
<!DOCTYPE html>
<html xmlns:th="https://www.thymeleaf.org/">
<head>
    <title>My App</title>
</head>
<body>
    <div th:fragment="header">
        <h1>Welcome to My App!</h1>
    </div>
</body>
</html>
```

In this example, a fragment named `header` is defined inside the `div` element.

### Using Fragments

Thymeleaf provides three main methods to include fragments in other templates: `th:include`, `th:insert`, and `th:replace`. Here’s a simple explanation of each:

1. **`th:include`**: Includes the content of the fragment inside the target element.

2. **`th:insert`**: Similar to `th:include`, but more suited for including the entire fragment with its context.

3. **`th:replace`**: Replaces the target element with the fragment content.

### Example Usage

Let’s assume you have another template where you want to use the `header` fragment defined in `header.html`.

**main.html**:
```html
<!DOCTYPE html>
<html xmlns:th="https://www.thymeleaf.org/">
<head>
    <title>My App - Main Page</title>
</head>
<body>
    <!-- Using th:include -->
    <div th:include="::header"></div>

    <!-- Using th:insert -->
    <div th:insert="::header"></div>

    <!-- Using th:replace -->
    <div th:replace="::header"></div>

    <p>This is the main page content.</p>
</body>
</html>
```

### Detailed Explanation

#### 1. **`th:include`**

```html
<div th:include="::header"></div>
```
- **Purpose**: Includes the content of the `header` fragment inside the `div` element.
- **Result**: The `div` element remains in the resulting HTML, and the content of the `header` fragment is included inside this `div`.

#### 2. **`th:insert`**

```html
<div th:insert="::header"></div>
```
- **Purpose**: Inserts the entire `header` fragment, including its context, inside the `div` element.
- **Result**: Similar to `th:include`, the `div` element remains in the resulting HTML, and the content of the `header` fragment is included inside this `div`.

#### 3. **`th:replace`**

```html
<div th:replace="::header"></div>
```
- **Purpose**: Replaces the `div` element entirely with the `header` fragment.
- **Result**: The `div` element is replaced by the `header` fragment in the resulting HTML.

### Example Result

For the `main.html` example, the resulting HTML might look like this:

```html
<!DOCTYPE html>
<html xmlns:th="https://www.thymeleaf.org/">
<head>
    <title>My App - Main Page</title>
</head>
<body>
    <!-- Result of th:include -->
    <div>
        <div>
            <h1>Welcome to My App!</h1>
        </div>
    </div>

    <!-- Result of th:insert -->
    <div>
        <div>
            <h1>Welcome to My App!</h1>
        </div>
    </div>

    <!-- Result of th:replace -->
    <div>
        <h1>Welcome to My App!</h1>
    </div>

    <p>This is the main page content.</p>
</body>
</html>
```

### Summary

- **Fragments**: Reusable pieces of HTML defined using `th:fragment`.
- **`th:include`**: Includes the content of the fragment inside the target element.
- **`th:insert`**: Similar to `th:include`, but more suited for including the entire fragment with its context.
- **`th:replace`**: Replaces the target element entirely with the fragment.

Using these methods, you can efficiently manage and reuse HTML content across different parts of your Thymeleaf templates.